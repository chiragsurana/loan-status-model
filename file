import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

df=pd.read_csv('E:/pandas/loan.csv')
df=df.rename(columns={'LOAN_ID':'id','ApplicantIncome':'Income',})
print(df)
df=df.dropna()
data=df.drop(columns={'Loan_ID','Gender'})
#plt.pie(data)
#plt.show()

df.replace({"Loan_Status":{"N":0,"Y":1}},inplace=True)
sns.heatmap(df.corr(), annot=True)
plt.xticks(rotation= 90)
plt.show()
sns.countplot(x="Education",hue="Loan_Status",data=df)
plt.show()
sns.countplot(x="Married",hue="Loan_Status",data=df)
plt.show()


df.replace({"Married" : {"No":0,"Yes":1},"Gender":{'Male':1,"Female":0},"Self_Employed":{'No':0,"Yes":1},"Property_Area":{'Rural':0,'Semiurban':1,'Urban':2},'Education':{'Graduate':1,'Not Graduate':0}},inplace=True)
df.replace({"Dependents":{'3+':3}},inplace=True)
x=df.drop(columns={'Loan_ID','Loan_Status'},axis=1)
y=df['Loan_Status']
print(df[df['Education']=='Graduate'] )
print(df.head())
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)
model = svm.SVC(kernel='linear')
model.fit(x_train,y_train)
pred=model.predict(x_test)
acc=accuracy_score(pred,y_test)

print(acc)
